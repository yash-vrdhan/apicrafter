name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual triggering

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov black isort mypy types-PyYAML
    
    - name: Lint with black
      run: black apicrafter/ --check
    
    - name: Lint with isort
      run: isort apicrafter/ --check-only
    
    - name: Type check with mypy
      run: mypy apicrafter/ --ignore-missing-imports
    
    - name: Test with pytest
      run: pytest apicrafter/tests/ --cov=apicrafter --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  publish-testpypi:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true
    
    - name: Test installation from TestPyPI
      run: |
        python -m pip install --upgrade pip
        python -m pip install typer httpx rich questionary pydantic pyyaml click
        python -m pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ apicrafter-cli
        apicrafter --help
      continue-on-error: true

  publish-pypi:
    needs: [build, publish-testpypi]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip-existing: true
    
    - name: Test installation from PyPI
      run: |
        python -m pip install --upgrade pip
        python -m pip install apicrafter-cli
        apicrafter --help
      continue-on-error: true

  create-release:
    needs: [publish-pypi]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Create GitHub Release
      run: |
        gh release create ${{ github.ref_name }} \
          --title "Release ${{ github.ref_name }}" \
          --notes "## What's Changed
        
        See the [changelog](https://github.com/yash-vrdhan/apicrafter/blob/master/CHANGELOG.md) for details.
        
        ## Installation
        
        \`\`\`bash
        pip install apicrafter-cli
        \`\`\`
        
        ## Quick Start
        
        \`\`\`bash
        apicrafter send GET https://httpbin.org/json
        apicrafter interactive
        \`\`\`"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
